{
  "hash": "794f9c6864b657efe6e65d412d255270",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Guide to Randomization\"\nabstract: \"Step-by-step instructions for implementing stratified randomization in Stata, including reproducible seed setting, balance checking, and troubleshooting common issues.\"\ndate: last-modified\n\n#------------------------------------------------------------------\n# Authors\n#------------------------------------------------------------------\n# Authors are the main creators of the site's content, credited\n# for their work and responsible for its core development,\n# including writing and editing.\n#------------------------------------------------------------------\nauthors-ipa:\n- \"[Rosemarie Sandino]()\"\n- \"[David Torres](https://poverty-action.org/people/david-francisco-torres-leon)\"\n\n#------------------------------------------------------------------\n# Contributors\n#------------------------------------------------------------------\n# Contributors provide support, such as feedback or supplementary\n# materials for the site. They can also be responsible for\n# updating/maintaining the site.\n#------------------------------------------------------------------\ncontributors:\n  - \"[Radhika Jain]()\"\n  - \"[Devika Lakhote]()\"\n  - \"[Laura Feeney]()\"\n\nkeywords:\n  - randomization\n  - impact evaluation\n  - experimental design\n  - treatment assignment\n  - cluster randomization\n  - stratified randomization\n  - how-to guide\n\nlicense: \"CC BY\"\n\n---\n\n## Problem: Assign Participants to Treatment Groups\n\nYou need to randomly assign participants to treatment and control groups while maintaining balance across key characteristics like grade level, school, or other strata.\n\n**Prerequisites:**\n\n- Stata installed with `randtreat` package\n- Dataset with participant identifiers and stratification variables\n- Basic familiarity with Stata commands\n\n**What you'll accomplish:**\n\n- Set up reproducible randomization with proper seed management\n- Implement stratified randomization to achieve balance\n- Verify treatment assignment worked correctly\n\n\n\n## Step 1: Set Up Your Environment\n\n**Set Stata version and seed for reproducibility:**\n\n- Use a different seed for each project\n- Choose seeds through random methods—such as from random.org or dice rolls\n- Set only one seed per do-file\n- Always set the Stata version at the beginning since algorithms change between versions\n\n## Step 2: Prepare Your Data\n\n**Example scenario:** School supply program evaluation\n\n- 500 students across 10 schools\n- Budget to treat 250 students\n- Need to ensure balance across grades\n\n**Create your dataset with participant identifiers and strata:**\n\n::: {#0474bb0f .cell execution_count=2}\n``` {.python .cell-code}\n%%stata\nclear\nset obs 500\ngen student_id = _n\ngen school_id = ceil(_n/50)         // 10 schools, 50 students each\ngen grade = mod(_n-1,5) + 1         // Grades one to five, evenly distributed\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n. clear\n\n. set obs 500\nNumber of observations (_N) was 0, now 500.\n\n. gen student_id = _n\n\n. gen school_id = ceil(_n/50)         // 10 schools, 50 students each\n\n. gen grade = mod(_n-1,5) + 1         // Grades one to five, evenly distributed\n\n. \n```\n:::\n:::\n\n\n## Step 3: Set Random Seed\n\n**Set a random seed for replicability:**\n\n::: {#87da5aa9 .cell execution_count=3}\n``` {.python .cell-code}\n%%stata\nset seed 12345\n```\n:::\n\n\n## Step 4: Verify Your Strata\n\n**Check that your stratification variable covers all participants:**\n\n::: {#aa80a23a .cell execution_count=4}\n``` {.python .cell-code}\n%%stata\ntab grade\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n      grade |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          1 |        100       20.00       20.00\n          2 |        100       20.00       40.00\n          3 |        100       20.00       60.00\n          4 |        100       20.00       80.00\n          5 |        100       20.00      100.00\n------------+-----------------------------------\n      Total |        500      100.00\n```\n:::\n:::\n\n\n## Step 5: Implement Stratified Randomization\n\n**Assign half of students to treatment within each grade—total treated equals 250. Generate a treatment variable where 1 equals treated and 0 equals control:**\n\n::: {#f26aae3b .cell execution_count=5}\n``` {.python .cell-code}\n%%stata\n\n* Install randtreat if not already installed\ncap ssc install randtreat\n\n* Use randtreat for stratified randomization by grade\nrandtreat, strata(grade) unequal(1/2 1/2) generate(treatment)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n. \n. * Install randtreat if not already installed\n. cap ssc install randtreat\n\n. \n. * Use randtreat for stratified randomization by grade\n. randtreat, strata(grade) unequal(1/2 1/2) generate(treatment)\nassignment produces 0 misfits\n\n. \n```\n:::\n:::\n\n\n## Step 6: Verify Balance\n\n**Tabulate treatment by grade and school to verify balance:**\n\n::: {#8ee02c48 .cell execution_count=6}\n``` {.python .cell-code}\n%%stata\ntab treatment grade\ntab treatment school_id\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n. tab treatment grade\n\n           |                         grade\n treatment |         1          2          3          4          5 |     Total\n-----------+-------------------------------------------------------+----------\n         0 |        50         50         50         50         50 |       250 \n         1 |        50         50         50         50         50 |       250 \n-----------+-------------------------------------------------------+----------\n     Total |       100        100        100        100        100 |       500 \n\n. tab treatment school_id\n\n           |                       school_id\n treatment |         1          2          3          4          5 |     Total\n-----------+-------------------------------------------------------+----------\n         0 |        26         27         25         24         18 |       250 \n         1 |        24         23         25         26         32 |       250 \n-----------+-------------------------------------------------------+----------\n     Total |        50         50         50         50         50 |       500 \n\n\n           |                       school_id\n treatment |         6          7          8          9         10 |     Total\n-----------+-------------------------------------------------------+----------\n         0 |        25         28         25         26         26 |       250 \n         1 |        25         22         25         24         24 |       250 \n-----------+-------------------------------------------------------+----------\n     Total |        50         50         50         50         50 |       500 \n\n. \n```\n:::\n:::\n\n\n## Troubleshooting Common Issues\n\n**Not setting a random seed:** Always use `set seed` in Stata to ensure your results are replicable.\n\n**Failing to check balance:** After randomization, verify that treatment and control groups have balance on key variables.\n\n**Confusing unit identifiers:** Double-check IDs—such as village, school, or participant names—to avoid misassignment.\n\n**Contamination:** Monitor to prevent control group members from receiving the treatment.\n\n**Poor documentation:** Keep detailed records of your randomization procedure for transparency and reproducibility.\n\n::: {.callout-warning collapse=\"true\"}\n\n## Sorting Considerations\n\n### Ensuring Reproducible Sorting\n\nThe `sort` command can produce non-reproducible results if the sorting variables don't uniquely identify observations. Always include a unique ID as the last sorting variable:\n\n```stata\n* Check if ID is unique\nisid unique_id\n\n* Sort by unique ID before generating random numbers\nsort unique_id\ngen rand = runiform()\n\n* When sorting by strata and random number, include unique ID last\nsort region rand unique_id\n```\n\nThis prevents Stata from breaking ties inconsistently, ensuring your randomization is reproducible.\n:::\n\nFor more detailed guidance on randomization and power calculations in Stata, see the [Stata power and sample size reference manual Release 18](https://www.stata.com/manuals/power.pdf) [^1].\n\n**Additional Resources:**\n\n- [IPA Randomization Guide with Example Do-files](https://ipastorage.box.com/s/sslf9h67yaejnhn3zz02ez3k508irzu8)\n- [William Gould on Random Number Seeds](https://blog.stata.com/2016/03/10/how-to-generate-random-numbers-in-stata/)\n- [StataCorp Blog Posts on Pseudo-Random Number Generators](https://blog.stata.com/tag/random-numbers/)\n\n[^1]: StataCorp. 2023. *Stata power and sample size reference manual: Release 18*. https://www.stata.com/manuals/power.pdf\n\n",
    "supporting": [
      "how-to-randomization_files"
    ],
    "filters": [],
    "includes": {}
  }
}