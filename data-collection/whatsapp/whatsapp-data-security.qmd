---
title: "WhatsApp and Data Security"

#------------------------------------------------------------------
# Authors
#------------------------------------------------------------------
# Authors are the main creators of the site's content, credited
# for their work and responsible for its core development,
# including writing and editing.
#------------------------------------------------------------------
authors-ipa:
  - "[David Torres](https://poverty-action.org/people/david-francisco-torres-leon)"

#------------------------------------------------------------------
# Contributors
#------------------------------------------------------------------
# Contributors provide support, such as feedback or supplementary
# materials for the site. They can also be responsible for
# updating/maintaining the site.
#------------------------------------------------------------------
contributors:
  - "[Cristhian Pulido](https://poverty-action.org/people/cristhian-pulido)"
---

:::{.custom-summary-block}
This resource guides you through securing your data collected via Twilio by implementing robust encryption measures, ensuring your data's confidentiality and integrity.
:::

:::{.callout-tip appearance="simple"}
## Key Takeaways
* Encryption ensures the confidentiality and integrity of sensitive data collected via WhatsApp surveys.
* Proper decryption methods allow secure access to the original data while maintaining its protection during storage and transfer.
:::

## Encrypting Data via WhatsApp Surveys

Ensuring the security of sensitive data is crucial, especially when dealing with Personally Identifiable Information (PII). If your survey or workflow involves PII, follow these steps to implement encryption before publishing into Google Sheets:

### Set Up Encryption in Twilio:
1. Navigate to "Functions/Services/Create Service" within your Twilio console.
2. Create a new service called "encrypt".

![Encrypt Service](/assets/images/twilio/twilio-encrypt-1.png){fig-cap="Encrypt Service" width=100%}

3. Click on "Add Function" and paste the following code:

::: {.callout-code style="text-align: center; font-family: 'Roboto Mono', monospace; border: 1px solid #49ac57; background-color: #e6f4ea;"}
<br>
[Twilio Encrypt Function](https://github.com/PovertyAction/requests_to_twilio/blob/master/twilio_encrypt_fields.js)
:::
<br>

![Encrypt configuration snapshot](/assets/images/twilio/twilio-encrypt-2.png){fig-cap="Encrypt configuration snapshot" width=100%}

4. Modify the secret_key and store it securely on your computer. Modify line 50 as it is shown in the next image.

![Change encryption key](/assets/images/twilio/twilio-encrypt-3.png){fig-cap="Change encryption key" width=100%}

5. Adjust the amount and names of the variables you intend to encrypt in lines 53 and 54 as shown in the previous image.

### Create an Encryption Widget in Twilio Studio Flow:
1. Just before the function widget that publishes to Google Sheets, create a function widget for encryption.

![Encryption Widget Configuration](/assets/images/twilio/twilio-encrypt-4.png){fig-cap="Encryption Widget Configuration" width=100%}

2. Select the service you created and set the environment as "UI" as shown in the previous image.
3. Choose the name of the function you created and input the variables to be encrypted as function parameters.

![Encryption Widget Configuration Example](/assets/images/twilio/twilio-encrypt-5.png){fig-cap="Example of the parameter configuration" width=70%}

4. Utilize the keys you want as variable names in the function code, using `{{widgets.widget_name.inbound.Body}}` as the values, as shown in the previous image.

### Update Google Sheets Publishing Function:
1. In the function responsible for publishing to Google Sheets, replace `{{widgets.variable_name.inbound.Body}}` with `{{widgets.name_of_your_encryption_widget.parsed.name_of_the_variable}}`

![Example of the configuration of the publish function](/assets/images/twilio/twilio-encrypt-6.png){fig-cap="Example of the configuration of the publish function" width=100%}

By implementing these steps, you will protect all the PII within your survey or workflow, ensuring that sensitive information remains confidential throughout the data collection.

## Decrypting Data via WhatsApp Surveys
Once your encrypted data is sent to Google Sheets, you'll receive strings that may seem unintelligible. Follow these steps for decryption:

### Download and Save Encrypted File:
1. Download the encrypted file provided.
2. Save it as a .csv file into a Boxcryptor/Cryptomator location for added security. It needs to be an "X:/" route.

### Run Decryption Code:
1. Execute the following Python code in the command prompt:

```python
python .\csv_decryptor.py --encrypted_csv_path X:\path\to\your\csv\demo.csv --list_of_columns_to_decrypt col1,col2 --secret_key your_secret_key1
```

2. Ensure you replace the placeholders; here is where you can find the information needed:

- `X:\path\to\your\csv\demo.csv`: The location of the encrypted dataset. Ensure this is in an "X:/" route for proper functionality.
- `col1,col2`: The columns that are encrypted.
- `your_secret_key1`: The secret key specified when creating the encryption function.

This process will generate a decrypted file version in the same path as the encrypted one. Following these clear steps ensures a smooth and secure decryption of your data.
